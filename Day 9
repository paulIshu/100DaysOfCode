class Solution{
    public:
    int Find(int in[],int element,int start,int n){
        for( int i=start; i<n;i++){
            if(in[i]==element){
                return i;
            }
        }
        return -1;
    }
    Node*solve(int in[], int pre[],int &index,int inorderStart,int inorderEnd,int n){
        if( index>=n || inorderStart>inorderEnd){
            return NULL;
        }
        
        int element = pre[index];
        index++;
        int pos = Find(in,element,inorderStart,n);
        Node*root = new Node(element);
        
        root->left = solve(in,pre,index,inorderStart,pos-1,n);
        root->right = solve(in,pre,index,pos+1,inorderEnd,n);
        return root;
    }
    Node* buildTree(int in[],int pre[], int n)
    {
        // Code here
        int preOrderIndex=0;
        Node*ans  =  solve(in,pre,preOrderIndex,0,n-1,n);
        return ans;
    }
};
